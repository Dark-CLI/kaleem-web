---
// No props needed for this component
---
<div class="theme-toggle">
  <span id="theme-toggle-text" class="theme-toggle-button" style="cursor: pointer;">
    <!-- Initial icon will be set by the script -->
  </span>
</div>

<style>
  .theme-toggle {
    display: flex;
    align-items: center;
  }

  .theme-toggle-button {
    /* Removed button-specific styles */
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--accent); /* Use accent color */
    /* Ensure text icon is visible and clickable */
    /* font-size: 1.2em; /* Removed to inherit from header */
    line-height: 1; /* Prevent extra spacing */
  }

  .theme-toggle-button:hover {
    color: var(--accent-dark); /* Change to darker accent on hover */
  }

  .theme-toggle-button i { /* Target the Font Awesome icon directly */
    font-size: 1.2em; /* Set a consistent size */
    vertical-align: middle; /* Ensure vertical alignment */
  }

  /* Removed icon specific styles and hide moon/sun by default comments */
</style>

<script is:inline>
  const getTheme = () => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  };

  const setTheme = (theme) => {
    document.documentElement.setAttribute('data-theme', theme);
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('theme', theme);
    }
    // Update the text content of the span
    const themeToggleText = document.getElementById('theme-toggle-text');
    if (themeToggleText) {
      themeToggleText.innerHTML = theme === 'dark' ? '<i class="fas fa-sun"></i>' : '<i class="fas fa-moon"></i>';
    }
  };

  // Set theme on initial load
  const initialTheme = getTheme();
  setTheme(initialTheme);

  // Add event listener to the span
  document.addEventListener('DOMContentLoaded', () => {
    const themeToggleText = document.getElementById('theme-toggle-text');
    if (themeToggleText) {
      themeToggleText.addEventListener('click', () => {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'light' ? 'dark' : 'light';
        setTheme(newTheme);
      });
    }
  });
</script>