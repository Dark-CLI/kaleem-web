---
import ThemeToggleButton from './ThemeToggleButton.astro';
import LanguageSwitcher from './LanguageSwitcher.astro';
import { getRelativeLocaleUrl } from 'astro:i18n';
import en from '../i18n/en.json';
import ar from '../i18n/ar.json';

const locale = Astro.currentLocale;
const t = locale === 'ar' ? ar : en;
const currentPath = Astro.url.pathname;
const navLinks = [
  { href: '/', text: t['nav.home'] },
  { href: '/solutions', text: t['nav.solutions'] },
  { href: '/features', text: t['nav.features'] },
  { href: '/examples', text: t['nav.examples'] },
  { href: '/about', text: t['nav.about'] },
  { href: '/contact', text: t['nav.contact'] },
];
---

<header class="main-header">
  <div class="header-content">
    <div class="header-left">
		<a href={getRelativeLocaleUrl(locale, '/')} class="logo-link">
        <img src="/images/kaleem-logo/vector/default-monochrome-black.svg" alt="Kaleem Logo" class="logo-img light" />
        <img src="/images/kaleem-logo/vector/default-monochrome-white.svg" alt="Kaleem Logo" class="logo-img dark" />
      </a>
    </div>
    <nav class="header-center">
      {navLinks.map(link => {
					const linkHref = getRelativeLocaleUrl(locale, link.href);
					const isActive = currentPath === linkHref || (currentPath === '/' && linkHref === getRelativeLocaleUrl(locale, '/'));
					return (
          <a
            href={linkHref}
            class={`nav-link${isActive ? ' active' : ''}`}
          >{link.text}</a>
					);
				})}
    </nav>
    <div class="header-right">
      <div class="header-utilities">
        <ThemeToggleButton />
        <LanguageSwitcher />
      </div>
      <button class="burger-menu" id="menu-toggle" aria-label="Open Menu">
        <svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="3" y1="6" x2="21" y2="6"/>
          <line x1="3" y1="12" x2="21" y2="12"/>
          <line x1="3" y1="18" x2="21" y2="18"/>
        </svg>
      </button>
    </div>
			</div>
  <div class="mobile-nav" id="mobile-nav">
    <div class="mobile-nav-content">
      <div class="mobile-utilities">
			<ThemeToggleButton />
			<LanguageSwitcher />
		</div>
      <nav class="mobile-links">
        {navLinks.map(link => {
                const linkHref = getRelativeLocaleUrl(locale, link.href);
                const isActive = currentPath === linkHref || (currentPath === '/' && linkHref === getRelativeLocaleUrl(locale, '/'));
                return (
            <a
              href={linkHref}
              class={`mobile-nav-link${isActive ? ' active' : ''}`}
            >{link.text}</a>
                );
            })}
      </nav>
    </div>
</div>
  <div class="menu-overlay" id="menu-overlay"></div>
  <script type="module" is:inline>
    // Simple burger menu toggle with slide animation
    const menuToggle = document.getElementById('menu-toggle');
    const mobileNav = document.getElementById('mobile-nav');
    const menuOverlay = document.getElementById('menu-overlay');

    function openMenu() {
      mobileNav?.classList.add('open');
      menuOverlay?.classList.add('visible');
      document.body.classList.add('menu-open');
    }

    function closeMenu() {
      mobileNav?.classList.remove('open');
      menuOverlay?.classList.remove('visible');
      document.body.classList.remove('menu-open');
    }
    
    menuToggle?.addEventListener('click', openMenu);
    menuOverlay?.addEventListener('click', closeMenu);
    
    // Close menu on nav link click
    mobileNav?.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', closeMenu);
  });
</script>
</header>